package Pz9;

import java.util.*;

public class CafeDemo {
    public static void main(String[] args) {
        demonstrateMenuSystem();
    }

    private static void demonstrateMenuSystem() {
        System.out.println("=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –°–ò–°–¢–ï–ú–´ –ö–ê–§–ï ===\n");

        MenuSystem menuSystem = new MenuSystem();

        MenuType jarrowsMenu = new JarrowsMenuType();
        menuSystem.registerNewMenuType("–ú–µ–Ω—é Jarrows", jarrowsMenu);

        MenuItem item1 = new MenuItem("–®–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç", 150, "–ù–µ–∂–Ω—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç–æ—Ä—Ç —Å –≤–∏—à–Ω–µ–π", "–î–ï–°–ï–†–¢");
        MenuItem item2 = new MenuItem("–§—Ä—É–∫—Ç–æ–≤—ã–π –º–∏–∫—Å", 120, "–°–≤–µ–∂–∏–µ —Å–µ–∑–æ–Ω–Ω—ã–µ —Ñ—Ä—É–∫—Ç—ã", "–ú–ò–ö–°");
        MenuItem item3 = new MenuItem("–¢–∏—Ä–∞–º–∏—Å—É", 180, "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π –¥–µ—Å–µ—Ä—Ç", "–î–ï–°–ï–†–¢");
        MenuItem item4 = new MenuItem("–î–æ—Ä–æ–≥–æ–π —Ç—Ä—é—Ñ–µ–ª—å", 600, "–≠–ª–∏—Ç–Ω—ã–π —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Ç—Ä—é—Ñ–µ–ª—å", "–î–ï–°–ï–†–¢");
        MenuItem item5 = new MenuItem("–°—Ç–µ–π–∫", 350, "–ì–æ–≤—è–∂–∏–π —Å—Ç–µ–π–∫ —Å –æ–≤–æ—â–∞–º–∏", "–û–°–ù–û–í–ù–û–ï");

        System.out.println("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é:");
        menuSystem.addMenuItemToMenu("–ú–µ–Ω—é Jarrows", item1);
        menuSystem.addMenuItemToMenu("–ú–µ–Ω—é Jarrows", item2);
        menuSystem.addMenuItemToMenu("–ú–µ–Ω—é Jarrows", item3);
        menuSystem.addMenuItemToMenu("–ú–µ–Ω—é Jarrows", item4);
        menuSystem.addMenuItemToMenu("–ú–µ–Ω—é Jarrows", item5);

        System.out.println("\n=== –ò–¢–û–ì–û–í–û–ï –ú–ï–ù–Æ ===");
        menuSystem.displayMenu("–ú–µ–Ω—é Jarrows");

        System.out.println("\n=== –î–ï–¢–°–ö–û–ï –ú–ï–ù–Æ ===");
        MenuType kidsMenu = new KidsMenuType();
        menuSystem.registerNewMenuType("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é", kidsMenu);

        MenuItem kidsItem1 = new MenuItem("–®–æ–∫–æ–ª–∞–¥–Ω–æ–µ –º–æ–ª–æ–∫–æ", 80, "–°–ª–∞–¥–∫–∏–π –Ω–∞–ø–∏—Ç–æ–∫ –¥–ª—è –¥–µ—Ç–µ–π", "–ù–ê–ü–ò–¢–û–ö");
        MenuItem kidsItem2 = new MenuItem("–î–µ—Ç—Å–∫–∏–π –±—É—Ä–≥–µ—Ä", 120, "–ú–∏–Ω–∏-–±—É—Ä–≥–µ—Ä —Å –∫–∞—Ä—Ç–æ—à–∫–æ–π", "–û–°–ù–û–í–ù–û–ï");
        MenuItem kidsItem3 = new MenuItem("–§—Ä—É–∫—Ç–æ–≤–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ", 60, "–ù–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —Ñ—Ä—É–∫—Ç–æ–≤–æ–µ –º–æ—Ä–æ–∂–µ–Ω–æ–µ", "–î–ï–°–ï–†–¢");

        menuSystem.addMenuItemToMenu("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é", kidsItem1);
        menuSystem.addMenuItemToMenu("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é", kidsItem2);
        menuSystem.addMenuItemToMenu("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é", kidsItem3);
        menuSystem.displayMenu("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é");

        System.out.println("\n=== –û–°–ù–û–í–ù–û–ï –ú–ï–ù–Æ ===");
        MenuType mainMenu = new MainMenuType();
        menuSystem.registerNewMenuType("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", mainMenu);

        MenuItem mainItem1 = new MenuItem("–ö—É—Ä–∏–Ω—ã–π —Å—É–ø", 90, "–ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫—É—Ä–∏–Ω—ã–π —Å—É–ø", "–°–£–ü");
        MenuItem mainItem2 = new MenuItem("–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—å", 130, "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç —Å –∫—É—Ä–∏—Ü–µ–π", "–°–ê–õ–ê–¢");
        MenuItem mainItem3 = new MenuItem("–õ–æ—Å–æ—Å—å –Ω–∞ –≥—Ä–∏–ª–µ", 280, "–õ–æ—Å–æ—Å—å —Å –ª–∏–º–æ–Ω–æ–º –∏ —Ç—Ä–∞–≤–∞–º–∏", "–û–°–ù–û–í–ù–û–ï");
        MenuItem mainItem4 = new MenuItem("–í–µ–≥–∞–Ω—Å–∫–∞—è –ø–∞—Å—Ç–∞", 160, "–ü–∞—Å—Ç–∞ —Å –æ–≤–æ—â–∞–º–∏ –∏ —Å–æ—É—Å–æ–º –ø–µ—Å—Ç–æ", "–û–°–ù–û–í–ù–û–ï");

        menuSystem.addMenuItemToMenu("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", mainItem1);
        menuSystem.addMenuItemToMenu("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", mainItem2);
        menuSystem.addMenuItemToMenu("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", mainItem3);
        menuSystem.addMenuItemToMenu("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é", mainItem4);
        menuSystem.displayMenu("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é");
    }
}

class MenuItem {
    private String name;
    private double price;
    private String description;
    private String type;

    public MenuItem(String name, double price, String description, String type) {
        this.name = name;
        this.price = price;
        this.description = description;
        this.type = type;
    }

    public String getName() { return name; }public double getPrice() { return price; }
    public String getDescription() { return description; }
    public String getType() { return type; }

    @Override
    public String toString() {
        return name + " (" + price + " —Ä—É–±.)";
    }
}

abstract class MenuType {
    private String menuTypeName;

    public MenuType(String menuTypeName) {
        this.menuTypeName = menuTypeName;
    }

    public abstract boolean canAddItem(MenuItem item);
    public String getMenuTypeName() { return menuTypeName; }
}

class JarrowsMenuType extends MenuType {
    public JarrowsMenuType() {
        super("–ú–µ–Ω—é Jarrows");
    }

    @Override
    public boolean canAddItem(MenuItem item) {
        boolean allowed = ("–î–ï–°–ï–†–¢".equals(item.getType()) || "–ú–ò–ö–°".equals(item.getType()))
                && item.getPrice() < 500;
        if (!allowed) {
            System.out.println("   ‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç '" + item.getName() + "' –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–∞–≤–∏–ª–∞–º –ú–µ–Ω—é Jarrows");
            System.out.println("     (—Ç–æ–ª—å–∫–æ –î–ï–°–ï–†–¢/–ú–ò–ö–° –∏ —Ü–µ–Ω–∞ < 500 —Ä—É–±)");
        }
        return allowed;
    }
}

class KidsMenuType extends MenuType {
    public KidsMenuType() {
        super("–î–µ—Ç—Å–∫–æ–µ –º–µ–Ω—é");
    }

    @Override
    public boolean canAddItem(MenuItem item) {
        boolean allowed = item.getPrice() < 100;
        if (!allowed) {
            System.out.println("   ‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç '" + item.getName() + "' —Å–ª–∏—à–∫–æ–º –¥–æ—Ä–æ–≥–æ–π –¥–ª—è –î–µ—Ç—Å–∫–æ–≥–æ –º–µ–Ω—é");
            System.out.println("     (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ 100 —Ä—É–±)");
        }
        return allowed;
    }
}

class MainMenuType extends MenuType {
    public MainMenuType() {
        super("–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é");
    }

    @Override
    public boolean canAddItem(MenuItem item) {
        boolean allowed = !"–î–ï–°–ï–†–¢".equals(item.getType()) && item.getPrice() < 300;
        if (!allowed) {
            System.out.println("   ‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç '" + item.getName() + "' –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –û—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é");
            System.out.println("     (–±–µ–∑ –¥–µ—Å–µ—Ä—Ç–æ–≤ –∏ —Ü–µ–Ω–∞ < 300 —Ä—É–±)");
        }
        return allowed;
    }
}

class MenuSystem {
    private Map<String, MenuType> menuTypes = new HashMap<>();
    private Map<String, List<MenuItem>> menus = new HashMap<>();

    public void registerNewMenuType(String name, MenuType menuType) {
        menuTypes.put(name, menuType);
        menus.put(name, new ArrayList<>());
        System.out.println("‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –º–µ–Ω—é: " + name);
    }

    public void addMenuItemToMenu(String menuName, MenuItem item) {
        if (!menuTypes.containsKey(menuName)) {
            System.out.println("‚ùå –ú–µ–Ω—é '" + menuName + "' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ");
            return;
        }

        MenuType menuType = menuTypes.get(menuName);
        if (menuType.canAddItem(item)) {
            menus.get(menuName).add(item);
            System.out.println("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: " + item.getName() + " –≤ –º–µ–Ω—é: " + menuName);
        }
    }

    public void displayMenu(String menuName) {
        System.out.println("\nüìã " + menuName);
        List<MenuItem> items = menus.get(menuName);
        if (items != null && !items.isEmpty()) {
            for (int i = 0; i < items.size(); i++) {
                MenuItem item = items.get(i);
                System.out.println("   " + (i + 1) + ". üçΩÔ∏è " + item.getName() +
                        " (" + item.getType() + "): " + item.getPrice() + " —Ä—É–±." +
                        " - " + item.getDescription());
            }
            double total = items.stream().mapToDouble(MenuItem::getPrice).sum();
            System.out.println("   üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: " + total + " —Ä—É–±.");
        } else {
            System.out.println("   üö´ –ü—É—Å—Ç–æ–µ –º–µ–Ω—é");
        }
    }

    public List<MenuItem> getMenuItems(String menuName) {
        return menus.getOrDefault(menuName, new ArrayList<>());
    }
}